<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-2.0.xsd
        http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd ">
    <!-- 自动扫描 指定扫描的包，会扫描该包下所有的上面有@Component @Controller @Service @Repository注解类 -->

    <context:component-scan base-package="cn.gok.service"></context:component-scan>


    <!--加载jdbc配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--配置连接池 数据源driud方式-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
    init-method="init" destroy-method="close">
    <!--基本属性url、user、password-->
    <property name="driverClassName" value="${jdbc.driver}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <!--配置监控统计拦截的filters-->
    <property name="filters" value="stat"/>
    <!--配置初始化大小、最小、最大-->
    <property name="maxActive" value="20"/>
    <property name="initialSize" value="1"/>
    <property name="minIdle" value="1"/>
    <!--配置获取连接等待超时的时间-->
    <property name="maxWait" value="60000"/>
    <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒-->
    <property name="timeBetweenEvictionRunsMillis" value="60000"/>
    <!--配置一个连接在池中最小生存的时间，单位是毫秒-->
    <property name="minEvictableIdleTimeMillis" value="300000"/>
    <property name="testWhileIdle" value="true"/>
    <property name="testOnBorrow" value="false"/>
    <property name="testOnReturn" value="false"/>
    <!--打开PSCache，并且指定每个连接上PSCache的大小-->
    <property name="poolPreparedStatements" value="true"/>
    <property name="maxOpenPreparedStatements" value="20"/>
</bean>

    <!--启动mybatis,配置MyBatis的Session工厂-->
    <bean id="sqlSessionFactory"

    class="org.mybatis.spring.SqlSessionFactoryBean">
    <!--数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--加载mybatis的全局配置文件-->
    <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    <!--配置Mapper扫描器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="cn.gok.dao"/>
</bean>

    <!--配置事务管理器-->
    <bean id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"></property>
    </bean>



    <!--配置事务的通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
        <tx:method name="*" propagation="REQUIRED" read-only="false"/>
        <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
    </tx:attributes>
</tx:advice>

    <!--配置aop-->
    <aop:config>
        <!--配置切入点表达式-->
        <aop:pointcut expression="execution(*
        cn.gok.service.imp.*.*(..))"
        id="pointcutService"/>
        <!--建立通知和切入点表达式的关系-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcutService"/>
    </aop:config>



</beans>